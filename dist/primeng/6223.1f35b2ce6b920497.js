"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[6223],{6223:(E,c,e)=>{e.r(c),e.d(c,{InvalidDemoModule:()=>j});var M=e(6019),s=e(7537),p=e(1120),n=e(3668),C=e(4505),f=e(9927),r=e(2060),u=e(4466),y=e(8866),S=e(534),T=e(8226),Z=e(9588),A=e(1953),I=e(9637),U=e(6078),D=e(8834),N=e(5073),J=e(587),g=e(9180),m=e(3622),v=e(7290);const L=function(){return["states","cities"]};let O=(()=>{class i{constructor(o,a){this.countryService=o,this.nodeService=a,this.cities=[{name:"New York",code:"NY"},{name:"Rome",code:"RM"},{name:"London",code:"LDN"},{name:"Istanbul",code:"IST"},{name:"Paris",code:"PRS"}]}ngOnInit(){this.countryService.getCountries().then(o=>{this.countries=o}),this.cascadeSelectCountries=[{name:"Australia",code:"AU",states:[{name:"New South Wales",cities:[{cname:"Sydney",code:"A-SY"},{cname:"Newcastle",code:"A-NE"},{cname:"Wollongong",code:"A-WO"}]},{name:"Queensland",cities:[{cname:"Brisbane",code:"A-BR"},{cname:"Townsville",code:"A-TO"}]}]},{name:"Canada",code:"CA",states:[{name:"Quebec",cities:[{cname:"Montreal",code:"C-MO"},{cname:"Quebec City",code:"C-QU"}]},{name:"Ontario",cities:[{cname:"Ottawa",code:"C-OT"},{cname:"Toronto",code:"C-TO"}]}]},{name:"United States",code:"US",states:[{name:"California",cities:[{cname:"Los Angeles",code:"US-LA"},{cname:"San Diego",code:"US-SD"},{cname:"San Francisco",code:"US-SF"}]},{name:"Florida",cities:[{cname:"Jacksonville",code:"US-JA"},{cname:"Miami",code:"US-MI"},{cname:"Tampa",code:"US-TA"},{cname:"Orlando",code:"US-OR"}]},{name:"Texas",cities:[{cname:"Austin",code:"US-AU"},{cname:"Dallas",code:"US-DA"},{cname:"Houston",code:"US-HO"}]}]}],this.nodeService.getFiles().then(o=>this.files=o)}searchCountry(o){let a=[],l=o.query;for(let t=0;t<this.countries.length;t++){let h=this.countries[t];0==h.name.toLowerCase().indexOf(l.toLowerCase())&&a.push(h)}this.filteredCountries=a}}return i.\u0275fac=function(o){return new(o||i)(n.Y36(C.T),n.Y36(f.s))},i.\u0275cmp=n.Xpm({type:i,selectors:[["ng-component"]],decls:47,vars:20,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","invalid"],[1,"content-section","implementation"],[1,"card"],[1,"p-fluid","p-grid"],[1,"p-field","p-col-12","p-md-4"],["type","text","id","inputtext","pInputText","","placeholder","InputText",1,"ng-invalid","ng-dirty"],["inputId","autocomplete","field","name","placeholder","AutoComplete",1,"ng-invalid","ng-dirty",3,"ngModel","suggestions","ngModelChange","completeMethod"],["inputId","calendar","placeholder","Calendar",1,"ng-invalid","ng-dirty",3,"ngModel","showIcon","ngModelChange"],["inputId","chips","placeholder","Chips",1,"ng-invalid","ng-dirty",3,"ngModel","ngModelChange"],["inputId","inputmask","mask","99/99/9999","placeholder","InputMask",1,"ng-invalid","ng-dirty",3,"ngModel","ngModelChange"],["inputId","inputnumber","placeholder","InputNumber",1,"ng-invalid","ng-dirty",3,"ngModel","ngModelChange"],["optionLabel","cname","optionGroupLabel","name","placeholder","CascadeSelect",1,"ng-invalid","ng-dirty",3,"options","optionGroupChildren"],["inputId","dropdown","optionLabel","name","placeholder","Dropdown",1,"ng-invalid","ng-dirty",3,"autoDisplayFirst","options","ngModel","ngModelChange"],["inputId","multiselect","optionLabel","name","placeholder","MultiSelect",1,"ng-invalid","ng-dirty",3,"options","ngModel","filter","ngModelChange"],["placeholder","Password",1,"ng-invalid","ng-dirty",3,"ngModel","ngModelChange"],["placeholder","TreeSelect",1,"ng-invalid","ng-dirty",3,"ngModel","options","ngModelChange"],["inputId","textarea","rows","3","cols","30","pInputTextarea","","placeholder","Textarea",1,"ng-invalid","ng-dirty",3,"ngModel","ngModelChange"],[1,"content-section","documentation"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/invalid","target","_blank",1,"btn-viewsource"],["lang","markup"],["lang","typescript"]],template:function(o,a){1&o&&(n.TgZ(0,"div",0),n.TgZ(1,"div",1),n.TgZ(2,"h1"),n._uU(3,"Invalid State"),n.qZA(),n.TgZ(4,"p"),n._uU(5,"All form components have an invalid state style to display the validation errors when "),n.TgZ(6,"i"),n._uU(7,"ng-invalid ng-dirty"),n.qZA(),n._uU(8," combination is applied by Angular."),n.qZA(),n.qZA(),n._UZ(9,"app-demoActions",2),n.qZA(),n.TgZ(10,"div",3),n.TgZ(11,"div",4),n.TgZ(12,"div",5),n.TgZ(13,"div",6),n._UZ(14,"input",7),n.qZA(),n.TgZ(15,"div",6),n.TgZ(16,"p-autoComplete",8),n.NdJ("ngModelChange",function(t){return a.value2=t})("completeMethod",function(t){return a.searchCountry(t)}),n.qZA(),n.qZA(),n.TgZ(17,"div",6),n.TgZ(18,"p-calendar",9),n.NdJ("ngModelChange",function(t){return a.value3=t}),n.qZA(),n.qZA(),n.TgZ(19,"div",6),n.TgZ(20,"p-chips",10),n.NdJ("ngModelChange",function(t){return a.value4=t}),n.qZA(),n.qZA(),n.TgZ(21,"div",6),n.TgZ(22,"p-inputMask",11),n.NdJ("ngModelChange",function(t){return a.value5=t}),n.qZA(),n.qZA(),n.TgZ(23,"div",6),n.TgZ(24,"p-inputNumber",12),n.NdJ("ngModelChange",function(t){return a.value6=t}),n.qZA(),n.qZA(),n.TgZ(25,"div",6),n._UZ(26,"p-cascadeSelect",13),n.qZA(),n.TgZ(27,"div",6),n.TgZ(28,"p-dropdown",14),n.NdJ("ngModelChange",function(t){return a.value7=t}),n.qZA(),n.qZA(),n.TgZ(29,"div",6),n.TgZ(30,"p-multiSelect",15),n.NdJ("ngModelChange",function(t){return a.value8=t}),n.qZA(),n.qZA(),n.TgZ(31,"div",6),n.TgZ(32,"p-password",16),n.NdJ("ngModelChange",function(t){return a.value9=t}),n.qZA(),n.qZA(),n.TgZ(33,"div",6),n.TgZ(34,"p-treeSelect",17),n.NdJ("ngModelChange",function(t){return a.value10=t}),n.qZA(),n.qZA(),n.TgZ(35,"div",6),n.TgZ(36,"textarea",18),n.NdJ("ngModelChange",function(t){return a.value11=t}),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.qZA(),n.TgZ(37,"div",19),n.TgZ(38,"p-tabView"),n.TgZ(39,"p-tabPanel",20),n.TgZ(40,"a",21),n.TgZ(41,"span"),n._uU(42,"View on GitHub"),n.qZA(),n.qZA(),n.TgZ(43,"app-code",22),n.IAx(),n._uU(44,'\n<div class="p-fluid p-grid">\n<div class="card">\n    <div class="p-fluid p-grid">\n        <div class="p-field p-col-12 p-md-4">\n            <input type="text" id="inputtext" pInputText class="ng-invalid ng-dirty" placeholder="InputText">\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-autoComplete inputId="autocomplete" [(ngModel)]="value2" [suggestions]="filteredCountries" (completeMethod)="searchCountry($event)" field="name" class="ng-invalid ng-dirty" placeholder="AutoComplete"></p-autoComplete>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-calendar inputId="calendar" [(ngModel)]="value3" class="ng-invalid ng-dirty" [showIcon]="true" placeholder="Calendar"></p-calendar>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-chips inputId="chips" [(ngModel)]="value4" class="ng-invalid ng-dirty" placeholder="Chips"></p-chips>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-inputMask inputId="inputmask" mask="99/99/9999" [(ngModel)]="value5" class="ng-invalid ng-dirty" placeholder="InputMask"></p-inputMask>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-inputNumber inputId="inputnumber" [(ngModel)]="value6" class="ng-invalid ng-dirty" placeholder="InputNumber"></p-inputNumber>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-cascadeSelect [options]="cascadeSelectCountries" optionLabel="cname" optionGroupLabel="name" [optionGroupChildren]="[\'states\', \'cities\']" class="ng-invalid ng-dirty" placeholder="CascadeSelect"></p-cascadeSelect>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-dropdown inputId="dropdown" [autoDisplayFirst]="false" [options]="cities" [(ngModel)]="value7" optionLabel="name" class="ng-invalid ng-dirty" placeholder="Dropdown"></p-dropdown>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-multiSelect inputId="multiselect" [options]="cities" [(ngModel)]="value8" optionLabel="name" [filter]="false" class="ng-invalid ng-dirty" placeholder="MultiSelect"></p-multiSelect>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-password [(ngModel)]="value9" placeholder="Password" class="ng-invalid ng-dirty"></p-password>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <p-treeSelect [(ngModel)]="value10" [options]="files" placeholder="TreeSelect" class="ng-invalid ng-dirty"></p-treeSelect>\n        </div>\n        <div class="p-field p-col-12 p-md-4">\n            <textarea inputId="textarea" rows="3" cols="30" [(ngModel)]="value11" pInputTextarea class="ng-invalid ng-dirty" placeholder="Textarea"></textarea>\n        </div>\n    </div>\n</div>\n'),n.fQ9(),n.qZA(),n.TgZ(45,"app-code",23),n.IAx(),n._uU(46,"\nexport class FloatLabelDemo {\n\n    countries: any[];\n\n    cascadeSelectCountries: any[];\n\n    cities: any[];\n\n    files: any[];\n\n    filteredCountries: any[];\n\n    value1: any;\n\n    value2: any;\n\n    value3: any;\n\n    value4: any;\n\n    value5: any;\n\n    value6: any;\n\n    value7: any;\n\n    value8: any;\n\n    value9: any;\n\n    value10: any;\n\n    value11: any;\n\n\n    constructor(private countryService: CountryService, private nodeService: NodeService) {\n        this.cities = [\n            {name: 'New York', code: 'NY'},\n            {name: 'Rome', code: 'RM'},\n            {name: 'London', code: 'LDN'},\n            {name: 'Istanbul', code: 'IST'},\n            {name: 'Paris', code: 'PRS'}\n        ];\n    }\n\n    ngOnInit() {\n        this.countryService.getCountries().then(countries => {\n            this.countries = countries;\n        });\n\n        this.cascadeSelectCountries = [\n            {\n                name: 'Australia',\n                code: 'AU',\n                states: [\n                    {\n                        name: 'New South Wales',\n                        cities: [\n                            {cname: 'Sydney', code: 'A-SY'},\n                            {cname: 'Newcastle', code: 'A-NE'},\n                            {cname: 'Wollongong', code: 'A-WO'}\n                        ]\n                    },\n                    {\n                        name: 'Queensland',\n                        cities: [\n                            {cname: 'Brisbane', code: 'A-BR'},\n                            {cname: 'Townsville', code: 'A-TO'}\n                        ]\n                    },\n\n                ]\n            },\n            {\n                name: 'Canada',\n                code: 'CA',\n                states: [\n                    {\n                        name: 'Quebec',\n                        cities: [\n                            {cname: 'Montreal', code: 'C-MO'},\n                            {cname: 'Quebec City', code: 'C-QU'}\n                        ]\n                    },\n                    {\n                        name: 'Ontario',\n                        cities: [\n                            {cname: 'Ottawa', code: 'C-OT'},\n                            {cname: 'Toronto', code: 'C-TO'}\n                        ]\n                    },\n\n                ]\n            },\n            {\n                name: 'United States',\n                code: 'US',\n                states: [\n                    {\n                        name: 'California',\n                        cities: [\n                            {cname: 'Los Angeles', code: 'US-LA'},\n                            {cname: 'San Diego', code: 'US-SD'},\n                            {cname: 'San Francisco', code: 'US-SF'}\n                        ]\n                    },\n                    {\n                        name: 'Florida',\n                        cities: [\n                            {cname: 'Jacksonville', code: 'US-JA'},\n                            {cname: 'Miami', code: 'US-MI'},\n                            {cname: 'Tampa', code: 'US-TA'},\n                            {cname: 'Orlando', code: 'US-OR'}\n                        ]\n                    },\n                    {\n                        name: 'Texas',\n                        cities: [\n                            {cname: 'Austin', code: 'US-AU'},\n                            {cname: 'Dallas', code: 'US-DA'},\n                            {cname: 'Houston', code: 'US-HO'}\n                        ]\n                    }\n                ]\n            }\n        ];\n\n        this.nodeService.getFiles().then(files => this.files = files);\n    }\n\n    searchCountry(event) {\n        //in a real application, make a request to a remote url with the query and return filtered results, for demo we filter at client side\n        let filtered : any[] = [];\n        let query = event.query;\n        for(let i = 0; i < this.countries.length; i++) {\n            let country = this.countries[i];\n            if (country.name.toLowerCase().indexOf(query.toLowerCase()) == 0) {\n                filtered.push(country);\n            }\n        }\n\n        this.filteredCountries = filtered;\n    }\n}\n"),n.fQ9(),n.qZA(),n.qZA(),n.qZA(),n.qZA()),2&o&&(n.xp6(16),n.Q6J("ngModel",a.value2)("suggestions",a.filteredCountries),n.xp6(2),n.Q6J("ngModel",a.value3)("showIcon",!0),n.xp6(2),n.Q6J("ngModel",a.value4),n.xp6(2),n.Q6J("ngModel",a.value5),n.xp6(2),n.Q6J("ngModel",a.value6),n.xp6(2),n.Q6J("options",a.cascadeSelectCountries)("optionGroupChildren",n.DdM(19,L)),n.xp6(2),n.Q6J("autoDisplayFirst",!1)("options",a.cities)("ngModel",a.value7),n.xp6(2),n.Q6J("options",a.cities)("ngModel",a.value8)("filter",!1),n.xp6(2),n.Q6J("ngModel",a.value9),n.xp6(2),n.Q6J("ngModel",a.value10)("options",a.files),n.xp6(2),n.Q6J("ngModel",a.value11))},directives:[r.P,u.o,y.Qc,s.JJ,s.On,S.f,T.cL,Z.vy,A.Rn,I.ZK,U.Lt,D.NU,N.ro,J.mP,s.Fj,g.g,m.xf,m.x4,v.h],encapsulation:2}),i})(),Q=(()=>{class i{}return i.\u0275fac=function(o){return new(o||i)},i.\u0275mod=n.oAB({type:i}),i.\u0275inj=n.cJS({imports:[[p.Bz.forChild([{path:"",component:O}])],p.Bz]}),i})();var b=e(5472),w=e(2239),F=e(2340),x=e(5638),R=e(1927),q=e(6232),P=e(5108),B=e(2825),W=e(9990),Y=e(704),G=e(2882),z=e(7856),H=e(732);let j=(()=>{class i{}return i.\u0275fac=function(o){return new(o||i)},i.\u0275mod=n.oAB({type:i}),i.\u0275inj=n.cJS({imports:[[M.ez,Q,b.hJ,G.XH,w.Q,F.LU,u.j,x.WN,R._8,q.Gg,P.zz,B.L$,W.kW,Y.q4,g.A,z.gz,H.o6,s.u5,r.L,v.a]]}),i})()}}]);