"use strict";(self.webpackChunkprimeng=self.webpackChunkprimeng||[]).push([[3972],{7290:(U,c,t)=>{t.d(c,{h:()=>p,a:()=>q});var u=t(6019),o=t(3668);const e=["code"],A=["*"];let p=(()=>{class l{constructor(Z){this.el=Z,this.lang="markup"}ngAfterViewInit(){window.Prism&&window.Prism.highlightElement(this.codeViewChild.nativeElement)}}return l.\u0275fac=function(Z){return new(Z||l)(o.Y36(o.SBq))},l.\u0275cmp=o.Xpm({type:l,selectors:[["app-code"]],viewQuery:function(Z,r){if(1&Z&&o.Gf(e,5),2&Z){let T;o.iGM(T=o.CRH())&&(r.codeViewChild=T.first)}},inputs:{lang:"lang"},ngContentSelectors:A,decls:5,vars:1,consts:[[3,"ngClass"],["code",""]],template:function(Z,r){1&Z&&(o.F$t(),o.TgZ(0,"pre",0),o.TgZ(1,"code",null,1),o.Hsn(3),o._uU(4,"\n"),o.qZA(),o.qZA()),2&Z&&o.Q6J("ngClass","language-"+r.lang)},directives:[u.mk],encapsulation:2}),l})(),q=(()=>{class l{}return l.\u0275fac=function(Z){return new(Z||l)},l.\u0275mod=o.oAB({type:l}),l.\u0275inj=o.cJS({imports:[[u.ez]]}),l})()},3972:(U,c,t)=>{t.r(c),t.d(c,{TreeSelectDemoModule:()=>I});var u=t(6019),o=t(1120),e=t(3668),A=t(9927),p=t(2060),q=t(587),l=t(7537),a=t(3622),Z=t(7290),r=t(3362);function T(n,s){1&n&&e._UZ(0,"iframe",21)}const m=function(){return["/theming"]};let _=(()=>{class n{constructor(d){this.nodeService=d,this.selectedNodes1=[],this.selectedNodes2=[]}ngOnInit(){this.nodeService.getFiles().then(d=>this.nodes1=d),this.nodeService.getFiles().then(d=>this.nodes2=d),this.nodeService.getFiles().then(d=>this.nodes3=d)}}return n.\u0275fac=function(d){return new(d||n)(e.Y36(A.s))},n.\u0275cmp=e.Xpm({type:n,selectors:[["ng-component"]],decls:543,vars:10,consts:[[1,"content-section","introduction"],[1,"feature-intro"],["github","treeselect","stackblitz","treeselect-demo"],[1,"content-section","implementation"],[1,"card"],["placeholder","Select Item",3,"ngModel","options","ngModelChange"],["selectionMode","multiple","placeholder","Select Item",3,"ngModel","options","metaKeySelection","ngModelChange"],["display","chip","selectionMode","checkbox","placeholder","Select Item",3,"ngModel","options","metaKeySelection","ngModelChange"],[1,"content-section","documentation"],["header","Documentation"],["lang","typescript"],["lang","markup"],[1,"doc-tablewrapper"],[1,"doc-table"],["href","https://github.com/primefaces/primeng/issues/7237#issue-409791407","target","_blank","rel","noopener noreferrer"],["href","#",3,"routerLink"],["header","Source"],["href","https://github.com/primefaces/primeng/tree/master/src/app/showcase/components/treeselect","target","_blank",1,"btn-viewsource"],["href","https://stackblitz.com/edit/primeng-treeselect-demo","target","_blank",1,"btn-viewsource",2,"margin-left",".5em"],["header","StackBlitz"],["pTemplate","content"],["src","https://stackblitz.com/edit/primeng-treeselect-demo?embed=1",2,"width","100%","height","768px","border","none"]],template:function(d,i){1&d&&(e.TgZ(0,"div",0),e.TgZ(1,"div",1),e.TgZ(2,"h1"),e._uU(3,"TreeSelect"),e.qZA(),e.TgZ(4,"p"),e._uU(5,"TreeSelect is a form component to choose from hierarchical data."),e.qZA(),e.qZA(),e._UZ(6,"app-demoActions",2),e.qZA(),e.TgZ(7,"div",3),e.TgZ(8,"div",4),e.TgZ(9,"h5"),e._uU(10,"Single"),e.qZA(),e.TgZ(11,"p-treeSelect",5),e.NdJ("ngModelChange",function(g){return i.selectedNode=g}),e.qZA(),e.TgZ(12,"h5"),e._uU(13,"Multiple"),e.qZA(),e.TgZ(14,"p-treeSelect",6),e.NdJ("ngModelChange",function(g){return i.selectedNodes1=g}),e.qZA(),e.TgZ(15,"h5"),e._uU(16,"Checkbox"),e.qZA(),e.TgZ(17,"p-treeSelect",7),e.NdJ("ngModelChange",function(g){return i.selectedNodes2=g}),e.qZA(),e.qZA(),e.qZA(),e.TgZ(18,"div",8),e.TgZ(19,"p-tabView"),e.TgZ(20,"p-tabPanel",9),e.TgZ(21,"h5"),e._uU(22,"Import"),e.qZA(),e.TgZ(23,"app-code",10),e.IAx(),e._uU(24,"\nimport {TreeSelectModule} from 'primeng/treeselect';\n"),e.fQ9(),e.qZA(),e.TgZ(25,"h5"),e._uU(26,"Getting Started"),e.qZA(),e.TgZ(27,"p"),e._uU(28,"TreeSelect component requires an array of TreeNode objects as its "),e.TgZ(29,"i"),e._uU(30,"options"),e.qZA(),e._uU(31," and keys of the nodes as its value."),e.qZA(),e.TgZ(32,"app-code",11),e.IAx(),e._uU(33,'\n<p-treeSelect [(ngModel)]="selectedNode" [options]="nodes" placeholder="Select Item"></p-treeSelect>\n'),e.fQ9(),e.qZA(),e.TgZ(34,"app-code",10),e.IAx(),e._uU(35,"\nexport class TreeSelectDemoComponent implements OnInit {\n    nodes: any[];\n\n    selectedNode: any;\n    constructor(public nodeService: NodeService) { }\n\n    ngOnInit() {\n        this.nodeService.getFiles().then(files => this.nodes1 = files);\n    }\n}\n"),e.fQ9(),e.qZA(),e.TgZ(36,"p"),e._uU(37,"In example below, nodes are retrieved from a remote data source."),e.qZA(),e.TgZ(38,"app-code",10),e.IAx(),e._uU(39,'\n{\n    "data":\n    [\n        {\n            "label": "Documents",\n            "data": "Documents Folder",\n            "expandedIcon": "pi pi-folder-open",\n            "collapsedIcon": "pi pi-folder",\n            "children": [{\n                    "label": "Work",\n                    "data": "Work Folder",\n                    "expandedIcon": "pi pi-folder-open",\n                    "collapsedIcon": "pi pi-folder",\n                    "children": [{"label": "Expenses.doc", "icon": "pi pi-file", "data": "Expenses Document"}, {"label": "Resume.doc", "icon": "pi pi-file", "data": "Resume Document"}]\n                },\n                {\n                    "label": "Home",\n                    "data": "Home Folder",\n                    "expandedIcon": "pi pi-folder-open",\n                    "collapsedIcon": "pi pi-folder",\n                    "children": [{"label": "Invoices.txt", "icon": "pi pi-file", "data": "Invoices for this month"}]\n                }]\n        },\n        {\n            "label": "Pictures",\n            "data": "Pictures Folder",\n            "expandedIcon": "pi pi-folder-open",\n            "collapsedIcon": "pi pi-folder",\n            "children": [\n                {"label": "barcelona.jpg", "icon": "pi pi-image", "data": "Barcelona Photo"},\n                {"label": "logo.jpg", "icon": "pi pi-file", "data": "PrimeFaces Logo"},\n                {"label": "primeui.png", "icon": "pi pi-image", "data": "PrimeUI Logo"}]\n        },\n        {\n            "label": "Movies",\n            "data": "Movies Folder",\n            "expandedIcon": "pi pi-folder-open",\n            "collapsedIcon": "pi pi-folder",\n            "children": [{\n                    "label": "Al Pacino",\n                    "data": "Pacino Movies",\n                    "children": [{"label": "Scarface", "icon": "pi pi-video", "data": "Scarface Movie"}, {"label": "Serpico", "icon": "pi pi-file-video", "data": "Serpico Movie"}]\n                },\n                {\n                    "label": "Robert De Niro",\n                    "data": "De Niro Movies",\n                    "children": [{"label": "Goodfellas", "icon": "pi pi-video", "data": "Goodfellas Movie"}, {"label": "Untouchables", "icon": "pi pi-video", "data": "Untouchables Movie"}]\n                }]\n        }\n    ]\n}\n'),e.fQ9(),e.qZA(),e.TgZ(40,"h5"),e._uU(41,"TreeNode API utilized by the TreeSelect"),e.qZA(),e.TgZ(42,"div",12),e.TgZ(43,"table",13),e.TgZ(44,"thead"),e.TgZ(45,"tr"),e.TgZ(46,"th"),e._uU(47,"Name"),e.qZA(),e.TgZ(48,"th"),e._uU(49,"Type"),e.qZA(),e.TgZ(50,"th"),e._uU(51,"Default"),e.qZA(),e.TgZ(52,"th"),e._uU(53,"Description"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(54,"tbody"),e.TgZ(55,"tr"),e.TgZ(56,"td"),e._uU(57,"label"),e.qZA(),e.TgZ(58,"td"),e._uU(59,"string"),e.qZA(),e.TgZ(60,"td"),e._uU(61,"null"),e.qZA(),e.TgZ(62,"td"),e._uU(63,"Label of the node."),e.qZA(),e.qZA(),e.TgZ(64,"tr"),e.TgZ(65,"td"),e._uU(66,"data"),e.qZA(),e.TgZ(67,"td"),e._uU(68,"any"),e.qZA(),e.TgZ(69,"td"),e._uU(70,"null"),e.qZA(),e.TgZ(71,"td"),e._uU(72,"Data represented by the node."),e.qZA(),e.qZA(),e.TgZ(73,"tr"),e.TgZ(74,"td"),e._uU(75,"icon"),e.qZA(),e.TgZ(76,"td"),e._uU(77,"string"),e.qZA(),e.TgZ(78,"td"),e._uU(79,"null"),e.qZA(),e.TgZ(80,"td"),e._uU(81,"Icon of the node to display next to content."),e.qZA(),e.qZA(),e.TgZ(82,"tr"),e.TgZ(83,"td"),e._uU(84,"expandedIcon"),e.qZA(),e.TgZ(85,"td"),e._uU(86,"string"),e.qZA(),e.TgZ(87,"td"),e._uU(88,"null"),e.qZA(),e.TgZ(89,"td"),e._uU(90,"Icon to use in expanded state."),e.qZA(),e.qZA(),e.TgZ(91,"tr"),e.TgZ(92,"td"),e._uU(93,"collapsedIcon"),e.qZA(),e.TgZ(94,"td"),e._uU(95,"string"),e.qZA(),e.TgZ(96,"td"),e._uU(97,"null"),e.qZA(),e.TgZ(98,"td"),e._uU(99,"Icon to use in collapsed state."),e.qZA(),e.qZA(),e.TgZ(100,"tr"),e.TgZ(101,"td"),e._uU(102,"children"),e.qZA(),e.TgZ(103,"td"),e._uU(104,"TreeNode[]"),e.qZA(),e.TgZ(105,"td"),e._uU(106,"null"),e.qZA(),e.TgZ(107,"td"),e._uU(108,"An array of treenodes as children."),e.qZA(),e.qZA(),e.TgZ(109,"tr"),e.TgZ(110,"td"),e._uU(111,"leaf"),e.qZA(),e.TgZ(112,"td"),e._uU(113,"boolean"),e.qZA(),e.TgZ(114,"td"),e._uU(115,"null"),e.qZA(),e.TgZ(116,"td"),e._uU(117,"Specifies if the node has children. Used in lazy loading."),e.qZA(),e.qZA(),e.TgZ(118,"tr"),e.TgZ(119,"td"),e._uU(120,"style"),e.qZA(),e.TgZ(121,"td"),e._uU(122,"string"),e.qZA(),e.TgZ(123,"td"),e._uU(124,"null"),e.qZA(),e.TgZ(125,"td"),e._uU(126,"Inline style of the node."),e.qZA(),e.qZA(),e.TgZ(127,"tr"),e.TgZ(128,"td"),e._uU(129,"styleClass"),e.qZA(),e.TgZ(130,"td"),e._uU(131,"string"),e.qZA(),e.TgZ(132,"td"),e._uU(133,"null"),e.qZA(),e.TgZ(134,"td"),e._uU(135,"Style class of the node."),e.qZA(),e.qZA(),e.TgZ(136,"tr"),e.TgZ(137,"td"),e._uU(138,"expanded"),e.qZA(),e.TgZ(139,"td"),e._uU(140,"boolean"),e.qZA(),e.TgZ(141,"td"),e._uU(142,"null"),e.qZA(),e.TgZ(143,"td"),e._uU(144,"Whether the node is in an expanded or collapsed state."),e.qZA(),e.qZA(),e.TgZ(145,"tr"),e.TgZ(146,"td"),e._uU(147,"type"),e.qZA(),e.TgZ(148,"td"),e._uU(149,"string"),e.qZA(),e.TgZ(150,"td"),e._uU(151,"null"),e.qZA(),e.TgZ(152,"td"),e._uU(153,"Type of the node to match ng-template type."),e.qZA(),e.qZA(),e.TgZ(154,"tr"),e.TgZ(155,"td"),e._uU(156,"parent"),e.qZA(),e.TgZ(157,"td"),e._uU(158,"TreeNode"),e.qZA(),e.TgZ(159,"td"),e._uU(160,"null"),e.qZA(),e.TgZ(161,"td"),e._uU(162,"Parent of the node."),e.qZA(),e.qZA(),e.TgZ(163,"tr"),e.TgZ(164,"td"),e._uU(165,"draggable"),e.qZA(),e.TgZ(166,"td"),e._uU(167,"boolean"),e.qZA(),e.TgZ(168,"td"),e._uU(169,"null"),e.qZA(),e.TgZ(170,"td"),e._uU(171,"Whether to disable dragging for a particular node even if draggableNodes is enabled."),e.qZA(),e.qZA(),e.TgZ(172,"tr"),e.TgZ(173,"td"),e._uU(174,"droppable"),e.qZA(),e.TgZ(175,"td"),e._uU(176,"boolean"),e.qZA(),e.TgZ(177,"td"),e._uU(178,"null"),e.qZA(),e.TgZ(179,"td"),e._uU(180,"Whether to disable dropping for a particular node even if droppableNodes is enabled."),e.qZA(),e.qZA(),e.TgZ(181,"tr"),e.TgZ(182,"td"),e._uU(183,"selectable"),e.qZA(),e.TgZ(184,"td"),e._uU(185,"boolean"),e.qZA(),e.TgZ(186,"td"),e._uU(187,"null"),e.qZA(),e.TgZ(188,"td"),e._uU(189,"Used to disable selection of a particular node."),e.qZA(),e.qZA(),e.TgZ(190,"tr"),e.TgZ(191,"td"),e._uU(192,"key"),e.qZA(),e.TgZ(193,"td"),e._uU(194,"string"),e.qZA(),e.TgZ(195,"td"),e._uU(196,"null"),e.qZA(),e.TgZ(197,"td"),e._uU(198,"Unique key of the node.("),e.TgZ(199,"a",14),e._uU(200,"more"),e.qZA(),e._uU(201,")"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(202,"h5"),e._uU(203,"Selection Mode"),e.qZA(),e.TgZ(204,"p"),e._uU(205,'TreeSelects offers "single", "multiple" and "checkbox" alternatives for the selection behavior that is defined by the '),e.TgZ(206,"i"),e._uU(207,"selectionMode"),e.qZA(),e._uU(208," option."),e.qZA(),e.TgZ(209,"app-code",11),e.IAx(),e._uU(210,'\n<p-treeSelect [(ngModel)]="selectedValue1" [options]="nodes" selectionMode="single"  placeholder="Select Item"></p-treeSelect>\n\n<p-treeSelect [(ngModel)]="selectedValue2" selectionMode="multiple" [options]="nodes" placeholder="Select Items"></p-treeSelect>\n\n<p-treeSelect [(ngModel)]="selectedValue3" selectionMode="checkbox" [options]="nodes" placeholder="Select Items"></p-treeSelect>\n'),e.fQ9(),e.qZA(),e.TgZ(211,"p"),e._uU(212,"In multiple mode or checkbox mode, selection property should be an array. In multiple mode, items can either be selected using metaKey or toggled individually depending on the value of metaKeySelection property value which is true by default. On touch enabled devices metaKeySelection is turned off automatically. In checkbox mode, when inititing a tree with preselections, also set partialSelected property on node so that minus icon can be displayed when necessary."),e.qZA(),e.TgZ(213,"h5"),e._uU(214,"Chips Display"),e.qZA(),e.TgZ(215,"p"),e._uU(216,"A comma separated list is used by default to display selected items whereas alternative chip mode is provided using the "),e.TgZ(217,"i"),e._uU(218,"display"),e.qZA(),e._uU(219," property to visualize the items as tokens."),e.qZA(),e.TgZ(220,"app-code",11),e.IAx(),e._uU(221,'\n<p-treeSelect [(ngModel)]="selectedValue" selectionMode="multiple" display="chip" [options]="nodes" placeholder="Select Items"></p-treeSelect>\n'),e.fQ9(),e.qZA(),e.TgZ(222,"h5"),e._uU(223,"Templating"),e.qZA(),e.TgZ(224,"p"),e._uU(225,"Label of an option is used as the display text of an item by default, for custom content support define a "),e.TgZ(226,"i"),e._uU(227,"value"),e.qZA(),e._uU(228," template that gets the selected nodes as a parameter. In addition "),e.TgZ(229,"i"),e._uU(230,"header"),e.qZA(),e._uU(231,", "),e.TgZ(232,"i"),e._uU(233,"footer"),e.qZA(),e._uU(234," and "),e.TgZ(235,"i"),e._uU(236,"empty"),e.qZA(),e._uU(237," slots are provided for further customization."),e.qZA(),e.TgZ(238,"app-code",11),e.IAx(),e._uU(239,'\n<p-treeSelect [(ngModel)]="selectedValue2" selectionMode="multiple" [options]="nodes" placeholder="Select Items">\n    <ng-template pTemplate="value">\n        Custom Content\n    </ng-template>\n</p-treeSelect>\n'),e.fQ9(),e.qZA(),e.TgZ(240,"h5"),e._uU(241,"Properties"),e.qZA(),e.TgZ(242,"div",12),e.TgZ(243,"table",13),e.TgZ(244,"thead"),e.TgZ(245,"tr"),e.TgZ(246,"th"),e._uU(247,"Name"),e.qZA(),e.TgZ(248,"th"),e._uU(249,"Type"),e.qZA(),e.TgZ(250,"th"),e._uU(251,"Default"),e.qZA(),e.TgZ(252,"th"),e._uU(253,"Description"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(254,"tbody"),e.TgZ(255,"tr"),e.TgZ(256,"td"),e._uU(257,"options"),e.qZA(),e.TgZ(258,"td"),e._uU(259,"array"),e.qZA(),e.TgZ(260,"td"),e._uU(261,"null"),e.qZA(),e.TgZ(262,"td"),e._uU(263,"An array of treenodes."),e.qZA(),e.qZA(),e.TgZ(264,"tr"),e.TgZ(265,"td"),e._uU(266,"scrollHeight"),e.qZA(),e.TgZ(267,"td"),e._uU(268,"string"),e.qZA(),e.TgZ(269,"td"),e._uU(270,"400px"),e.qZA(),e.TgZ(271,"td"),e._uU(272,"Height of the viewport, a scrollbar is defined if height of list exceeds this value."),e.qZA(),e.qZA(),e.TgZ(273,"tr"),e.TgZ(274,"td"),e._uU(275,"placeholder"),e.qZA(),e.TgZ(276,"td"),e._uU(277,"string"),e.qZA(),e.TgZ(278,"td"),e._uU(279,"null"),e.qZA(),e.TgZ(280,"td"),e._uU(281,"Label to display when there are no selections."),e.qZA(),e.qZA(),e.TgZ(282,"tr"),e.TgZ(283,"td"),e._uU(284,"disabled"),e.qZA(),e.TgZ(285,"td"),e._uU(286,"boolean"),e.qZA(),e.TgZ(287,"td"),e._uU(288,"false"),e.qZA(),e.TgZ(289,"td"),e._uU(290,"When present, it specifies that the component should be disabled."),e.qZA(),e.qZA(),e.TgZ(291,"tr"),e.TgZ(292,"td"),e._uU(293,"tabindex"),e.qZA(),e.TgZ(294,"td"),e._uU(295,"string"),e.qZA(),e.TgZ(296,"td"),e._uU(297,"null"),e.qZA(),e.TgZ(298,"td"),e._uU(299,"Index of the element in tabbing order."),e.qZA(),e.qZA(),e.TgZ(300,"tr"),e.TgZ(301,"td"),e._uU(302,"inputId"),e.qZA(),e.TgZ(303,"td"),e._uU(304,"string"),e.qZA(),e.TgZ(305,"td"),e._uU(306,"null"),e.qZA(),e.TgZ(307,"td"),e._uU(308,"Identifier of the underlying input element."),e.qZA(),e.qZA(),e.TgZ(309,"tr"),e.TgZ(310,"td"),e._uU(311,"ariaLabelledBy"),e.qZA(),e.TgZ(312,"td"),e._uU(313,"string"),e.qZA(),e.TgZ(314,"td"),e._uU(315,"null"),e.qZA(),e.TgZ(316,"td"),e._uU(317,"Establishes relationships between the component and label(s) where its value should be one or more element IDs."),e.qZA(),e.qZA(),e.TgZ(318,"tr"),e.TgZ(319,"td"),e._uU(320,"selectionMode"),e.qZA(),e.TgZ(321,"td"),e._uU(322,"string"),e.qZA(),e.TgZ(323,"td"),e._uU(324,"null"),e.qZA(),e.TgZ(325,"td"),e._uU(326,'Defines the selection mode, valid values "single", "multiple", and "checkbox".'),e.qZA(),e.qZA(),e.TgZ(327,"tr"),e.TgZ(328,"td"),e._uU(329,"panelClass"),e.qZA(),e.TgZ(330,"td"),e._uU(331,"string"),e.qZA(),e.TgZ(332,"td"),e._uU(333,"null"),e.qZA(),e.TgZ(334,"td"),e._uU(335,"Style class of the overlay panel."),e.qZA(),e.qZA(),e.TgZ(336,"tr"),e.TgZ(337,"td"),e._uU(338,"appendTo"),e.qZA(),e.TgZ(339,"td"),e._uU(340,"string"),e.qZA(),e.TgZ(341,"td"),e._uU(342,"body"),e.qZA(),e.TgZ(343,"td"),e._uU(344,'A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are "body" for document body and "self" for the element itself.'),e.qZA(),e.qZA(),e.TgZ(345,"tr"),e.TgZ(346,"td"),e._uU(347,"emptyMessage"),e.qZA(),e.TgZ(348,"td"),e._uU(349,"string"),e.qZA(),e.TgZ(350,"td"),e._uU(351,"No results found"),e.qZA(),e.TgZ(352,"td"),e._uU(353,"Text to display when there are no options available. Defaults to value from PrimeVue locale configuration."),e.qZA(),e.qZA(),e.TgZ(354,"tr"),e.TgZ(355,"td"),e._uU(356,"display"),e.qZA(),e.TgZ(357,"td"),e._uU(358,"string"),e.qZA(),e.TgZ(359,"td"),e._uU(360,"comma"),e.qZA(),e.TgZ(361,"td"),e._uU(362,'Defines how the selected items are displayed, valid values are "comma" and "chip".'),e.qZA(),e.qZA(),e.TgZ(363,"tr"),e.TgZ(364,"td"),e._uU(365,"propagateSelectionUp"),e.qZA(),e.TgZ(366,"td"),e._uU(367,"boolean"),e.qZA(),e.TgZ(368,"td"),e._uU(369,"true"),e.qZA(),e.TgZ(370,"td"),e._uU(371,"Whether checkbox selections propagate to ancestor nodes."),e.qZA(),e.qZA(),e.TgZ(372,"tr"),e.TgZ(373,"td"),e._uU(374,"propagateSelectionDown"),e.qZA(),e.TgZ(375,"td"),e._uU(376,"boolean"),e.qZA(),e.TgZ(377,"td"),e._uU(378,"true"),e.qZA(),e.TgZ(379,"td"),e._uU(380,"Whether checkbox selections propagate to descendant nodes."),e.qZA(),e.qZA(),e.TgZ(381,"tr"),e.TgZ(382,"td"),e._uU(383,"metaKeySelection"),e.qZA(),e.TgZ(384,"td"),e._uU(385,"boolean"),e.qZA(),e.TgZ(386,"td"),e._uU(387,"true"),e.qZA(),e.TgZ(388,"td"),e._uU(389,"Defines how multiple items can be selected, when true metaKey needs to be pressed to select or unselect an item and when set to false selection of each item can be toggled individually. On touch enabled devices, metaKeySelection is turned off automatically."),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(390,"h5"),e._uU(391,"Events"),e.qZA(),e.TgZ(392,"div",12),e.TgZ(393,"table",13),e.TgZ(394,"thead"),e.TgZ(395,"tr"),e.TgZ(396,"th"),e._uU(397,"Name"),e.qZA(),e.TgZ(398,"th"),e._uU(399,"Parameters"),e.qZA(),e.TgZ(400,"th"),e._uU(401,"Description"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(402,"tbody"),e.TgZ(403,"tr"),e.TgZ(404,"td"),e._uU(405,"onShow"),e.qZA(),e.TgZ(406,"td"),e._uU(407,"-"),e.qZA(),e.TgZ(408,"td"),e._uU(409,"Callback to invoke when the overlay is shown."),e.qZA(),e.qZA(),e.TgZ(410,"tr"),e.TgZ(411,"td"),e._uU(412,"onHide"),e.qZA(),e.TgZ(413,"td"),e._uU(414,"-"),e.qZA(),e.TgZ(415,"td"),e._uU(416,"Callback to invoke when the overlay is hidden."),e.qZA(),e.qZA(),e.TgZ(417,"tr"),e.TgZ(418,"td"),e._uU(419,"onNodeSelect"),e.qZA(),e.TgZ(420,"td"),e._uU(421,"node: Node instance"),e.qZA(),e.TgZ(422,"td"),e._uU(423,"Callback to invoke when a node is selected."),e.qZA(),e.qZA(),e.TgZ(424,"tr"),e.TgZ(425,"td"),e._uU(426,"onNodeUnselect"),e.qZA(),e.TgZ(427,"td"),e._uU(428,"node: Node instance"),e.qZA(),e.TgZ(429,"td"),e._uU(430,"Callback to invoke when a node is unselected."),e.qZA(),e.qZA(),e.TgZ(431,"tr"),e.TgZ(432,"td"),e._uU(433,"onNodeExpand"),e.qZA(),e.TgZ(434,"td"),e._uU(435,"node: Node instance"),e.qZA(),e.TgZ(436,"td"),e._uU(437,"Callback to invoke when a node is expanded."),e.qZA(),e.qZA(),e.TgZ(438,"tr"),e.TgZ(439,"td"),e._uU(440,"onNodeCollapse"),e.qZA(),e.TgZ(441,"td"),e._uU(442,"node: Node instance"),e.qZA(),e.TgZ(443,"td"),e._uU(444,"Callback to invoke when a node is collapsed."),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(445,"h5"),e._uU(446,"Templates"),e.qZA(),e.TgZ(447,"div",12),e.TgZ(448,"table",13),e.TgZ(449,"thead"),e.TgZ(450,"tr"),e.TgZ(451,"th"),e._uU(452,"Name"),e.qZA(),e.TgZ(453,"th"),e._uU(454,"Parameters"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(455,"tbody"),e.TgZ(456,"tr"),e.TgZ(457,"td"),e._uU(458,"value"),e.qZA(),e.TgZ(459,"td"),e._uU(460,"$implicit: Value of the component"),e.qZA(),e.qZA(),e.TgZ(461,"tr"),e.TgZ(462,"td"),e._uU(463,"header"),e.qZA(),e.TgZ(464,"td"),e._uU(465,"$implicit: Value of the component "),e._UZ(466,"br"),e._uU(467," options: TreeNode options"),e.qZA(),e.qZA(),e.TgZ(468,"tr"),e.TgZ(469,"td"),e._uU(470,"footer"),e.qZA(),e.TgZ(471,"td"),e._uU(472,"$implicit: Value of the component "),e._UZ(473,"br"),e._uU(474," options: TreeNode options"),e.qZA(),e.qZA(),e.TgZ(475,"tr"),e.TgZ(476,"td"),e._uU(477,"empty"),e.qZA(),e.TgZ(478,"td"),e._uU(479,"-"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(480,"h5"),e._uU(481,"Styling"),e.qZA(),e.TgZ(482,"p"),e._uU(483,"Following is the list of structural style classes, for theming classes visit "),e.TgZ(484,"a",15),e._uU(485,"theming"),e.qZA(),e._uU(486," page."),e.qZA(),e.TgZ(487,"div",12),e.TgZ(488,"table",13),e.TgZ(489,"thead"),e.TgZ(490,"tr"),e.TgZ(491,"th"),e._uU(492,"Name"),e.qZA(),e.TgZ(493,"th"),e._uU(494,"Element"),e.qZA(),e.qZA(),e.qZA(),e.TgZ(495,"tbody"),e.TgZ(496,"tr"),e.TgZ(497,"td"),e._uU(498,"p-treeselect"),e.qZA(),e.TgZ(499,"td"),e._uU(500,"Container element."),e.qZA(),e.qZA(),e.TgZ(501,"tr"),e.TgZ(502,"td"),e._uU(503,"p-treeselect-label-container"),e.qZA(),e.TgZ(504,"td"),e._uU(505,"Container of the label to display selected items."),e.qZA(),e.qZA(),e.TgZ(506,"tr"),e.TgZ(507,"td"),e._uU(508,"p-treeselect-label"),e.qZA(),e.TgZ(509,"td"),e._uU(510,"Label to display selected items."),e.qZA(),e.qZA(),e.TgZ(511,"tr"),e.TgZ(512,"td"),e._uU(513,"p-treeselect-trigger"),e.qZA(),e.TgZ(514,"td"),e._uU(515,"Dropdown button."),e.qZA(),e.qZA(),e.TgZ(516,"tr"),e.TgZ(517,"td"),e._uU(518,"p-treeselect-panel"),e.qZA(),e.TgZ(519,"td"),e._uU(520,"Overlay panel for items."),e.qZA(),e.qZA(),e.TgZ(521,"tr"),e.TgZ(522,"td"),e._uU(523,"p-treeselect-items-wrapper"),e.qZA(),e.TgZ(524,"td"),e._uU(525,"List container of items."),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(526,"h5"),e._uU(527,"Dependencies"),e.qZA(),e.TgZ(528,"p"),e._uU(529,"None."),e.qZA(),e.qZA(),e.TgZ(530,"p-tabPanel",16),e.TgZ(531,"a",17),e.TgZ(532,"span"),e._uU(533,"View on GitHub"),e.qZA(),e.qZA(),e.TgZ(534,"a",18),e.TgZ(535,"span"),e._uU(536,"Edit in StackBlitz"),e.qZA(),e.qZA(),e.TgZ(537,"app-code",11),e.IAx(),e._uU(538,'\n<h5>Single</h5>\n<p-treeSelect [(ngModel)]="selectedNode" [options]="nodes1" placeholder="Select Item"></p-treeSelect>\n\n<h5>Multiple</h5>\n<p-treeSelect [(ngModel)]="selectedNodes1" [options]="nodes2" [metaKeySelection]="false" selectionMode="multiple" placeholder="Select Item"></p-treeSelect>\n\n<h5>Checkbox</h5>\n<p-treeSelect [(ngModel)]="selectedNodes2" [options]="nodes3" display="chip" [metaKeySelection]="false" selectionMode="checkbox" placeholder="Select Item"></p-treeSelect>\n'),e.fQ9(),e.qZA(),e.TgZ(539,"app-code",10),e.IAx(),e._uU(540,"\nexport class TreeSelectModule {\n    nodes1: any[];\n\n    nodes2: any[];\n\n    nodes3: any[];\n\n    selectedNodes1: any[] = [];\n\n    selectedNodes2: any[] = [];\n\n    selectedNode: any;\n\n    constructor(public nodeService: NodeService) { }\n\n    ngOnInit() {\n        this.nodeService.getFiles().then(files => this.nodes1 = files);\n        this.nodeService.getFiles().then(files => this.nodes2 = files);\n        this.nodeService.getFiles().then(files => this.nodes3 = files);\n    }\n}\n"),e.fQ9(),e.qZA(),e.qZA(),e.TgZ(541,"p-tabPanel",19),e.YNc(542,T,1,0,"ng-template",20),e.qZA(),e.qZA(),e.qZA()),2&d&&(e.xp6(11),e.Q6J("ngModel",i.selectedNode)("options",i.nodes1),e.xp6(3),e.Q6J("ngModel",i.selectedNodes1)("options",i.nodes2)("metaKeySelection",!1),e.xp6(3),e.Q6J("ngModel",i.selectedNodes2)("options",i.nodes3)("metaKeySelection",!1),e.xp6(467),e.Q6J("routerLink",e.DdM(9,m)))},directives:[p.P,q.mP,l.JJ,l.On,a.xf,a.x4,Z.h,o.yS,r.jx],styles:["[_nghost-%COMP%]     .p-treeselect{width:20rem;display:inline-flex}"]}),n})(),f=(()=>{class n{}return n.\u0275fac=function(d){return new(d||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[o.Bz.forChild([{path:"",component:_}])],o.Bz]}),n})();var b=t(5472),y=t(2239),S=t(2340),v=t(2882),M=t(732);let I=(()=>{class n{}return n.\u0275fac=function(d){return new(d||n)},n.\u0275mod=e.oAB({type:n}),n.\u0275inj=e.cJS({imports:[[u.ez,f,b.hJ,y.Q,S.LU,v.XH,l.u5,p.L,Z.a,M.o6]]}),n})()}}]);